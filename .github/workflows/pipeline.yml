name: Deployment Pipeline

on:
  push: 
    branches: 
      - main
  pull_request: 
    branches: [main]
    types: [opened, synchronize]
  

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm run lint
  build: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test:
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Test
        run: pnpm test

  release:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: release
        run: npx semantic-release
      
  
  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name:  Deploy
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "Deployed"

  # release:
